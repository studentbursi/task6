def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

def mod_inverse(a, m):
    for x in range(1, m):
        if (a * x) % m == 1:
            return x
    return None

def encrypt_rsa(text, e, n):
    encrypted_text = ""
    for char in text:
        char_code = ord(char)
        encrypted_char_code = pow(char_code, e, n)
        encrypted_text += str(encrypted_char_code) + " "
    return encrypted_text.strip()

def main():
    plaintext = "DOG"
    p = 3
    q = 13
    n = p * q
    phi_n = (p - 1) * (q - 1)
    e = 5  # Public key
    d = mod_inverse(e, phi_n)  # Private key

    ciphertext = encrypt_rsa(plaintext, e, n)
    print(f"Plaintext: {plaintext}")
    print(f"Encrypted: {ciphertext}")

if __name__ == "__main__":
    main()
